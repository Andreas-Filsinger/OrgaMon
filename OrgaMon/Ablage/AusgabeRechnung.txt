
procedure TFormBelege.AusgabeRechnung(NurGeliefertes: boolean; AlsLieferschein: boolean);
var
  AnschriftInfo: TStringList;
  MyBeleg: THTMLTemplate;
  MyPackliste: THTMLTemplate;
  VerpackerMehrInfo: string;
  _Summe: double;
  _Gewicht: integer;
  EvenOddCounter: integer;
  EvenOddCounterPackListe: integer;
  _AddText: string;
  _datum: TAnfixDate;
  ArtikelInfo: TStringList;
  _PreisProPosition: double;
  _GewichtProPosition: integer;
  _Netto: double;
  _NettoInDieserMwStKlasse: double;
  n: integer;
  _UstID: string;
  KundenInfo: TStringList;
  EinzelPreisNetto: boolean;

  // Für AddLine
  MwStAnz: integer;
  MwStSaver: array of TMwStInfo;

  // für Posten
var
  _Anz,
    _AnzAuftrag,
    _AnzGeliefert,
    _AnzStorniert,
    _AnzNachlieferung: integer;
var
  _Rabatt,
    _EinzelPreisUnrabattiert,
    _EinzelPreis,
    _MwStSatz: double;


{$I AddLine.inc}

begin
  BerechneBelegActive := true;
  BeginHourGlass;

  AnschriftInfo := TStringList.Create;
  ArtikelInfo := TStringList.create;
  KundenInfo := TStringList.create;

  MyPackliste := THTMLTemplate.Create;
  MyBeleg := THTMLTemplate.Create;

  EinzelPreisNetto := IB_Query1.FieldByName('EINZELPREIS_NETTO').AsString = 'Y';

  // Kontext setzten für Rechnungs-Anschrift
  // Person!
  if AlsLieferschein then
  begin
    IB_Query7.ParamByName('CROSSREF').AsInteger := IB_Query1.FieldByName('LIEFERANSCHRIFT_R').AsInteger;
  end else
  begin
    if IB_Query1.FieldByName('RECHNUNGSANSCHRIFT_R').IsNull then
    begin
      IB_Query7.ParamByName('CROSSREF').AsInteger := IB_Query1.FieldByName('PERSON_R').AsInteger;
    end else
    begin
      IB_Query7.ParamByName('CROSSREF').AsInteger := IB_Query1.FieldByName('RECHNUNGSANSCHRIFT_R').AsInteger;
    end;
  end;

  // nun die Anschrift dazu
  if IB_Query7.IsEmpty then
    ShowMessage('Fehler: Person nicht mehr gefunden!');
  IB_Query8.ParamByName('CROSSREF').AsInteger := IB_Query7.FieldByName('PRIV_ANSCHRIFT_R').AsInteger;
  if IB_Query8.IsEmpty then
    ShowMessage('Fehler: Anschrift nicht mehr gefunden!');

  // Vorlagen laden
  MyPackliste.LoadFromFile(MyProgramPath + cHTMLTemplatesDir + 'Packliste.html');

  if AlsLieferschein then
    MyBeleg.LoadFromFile(MyProgramPath + cHTMLTemplatesDir + 'Lieferschein.html')
  else
    MyBeleg.LoadFromFile(MyProgramPath + cHTMLTemplatesDir + 'Rechnung.html');

  // Datenfelder ersetzen
  with MyPackListe do
  begin
    VerpackerMehrInfo := FormLager.ObtainNameFromRID(IB_query1.FieldByName('LAGER_R').AsInteger);
    if (VerpackerMehrInfo <> '') then
      VerpackerMehrInfo := ' nach ' + VerpackerMehrInfo + '!';

    WriteValue('R#', inttostr(IB_query1.FieldByName('RID').AsInteger));
    WriteValue('Beleg Titel',

      'PACKLISTE NUMMER ' + inttostr(IB_query1.FieldByName('RID').AsInteger) + '-' +
      inttostrN(IB_Query1.FieldByName('TEILLIEFERUNG').AsInteger, 2) +
      VerpackerMehrInfo
      );

    SaveBlockToFile('ARTIKEL EVEN', MyProgramPath + cHTMLBlocksDir + 'SUBITEM PACKLISTE ARTIKEL EVEN.html');
    SaveBlockToFile('ARTIKEL ODD', MyProgramPath + cHTMLBlocksDir + 'SUBITEM PACKLISTE ARTIKEL ODD.html');
    SaveBlockToFile('PUNKTE', MyProgramPath + cHTMLBlocksDir + 'SUBITEM PACKLISTE PUNKTE.html');
    ClearBlock('ARTIKEL EVEN');
    ClearBlock('ARTIKEL ODD');
    ClearBlock('PUNKTE');
  end;

  with MyBeleg do
  begin

    WriteValue('R#', inttostr(IB_query1.FieldByName('RID').AsInteger));
    if AlsLieferschein then
      WriteValue('Beleg Titel', 'LIEFERSCHEIN NUMMER ' + inttostr(IB_query1.FieldByName('RID').AsInteger))
    else
      WriteValue('Beleg Titel', 'RECHNUNG NUMMER ' + inttostr(IB_query1.FieldByName('RID').AsInteger));

    SaveBlockToFile('ARTIKEL EVEN', MyProgramPath + cHTMLBlocksDir + 'SUBITEM ARTIKEL EVEN.html');
    SaveBlockToFile('ARTIKEL ODD', MyProgramPath + cHTMLBlocksDir + 'SUBITEM ARTIKEL ODD.html');
    SaveBlockToFile('MWST', MyProgramPath + cHTMLBlocksDir + 'SUBITEM MWST.html');
    SaveBlockToFile('PUNKTE', MyProgramPath + cHTMLBlocksDir + 'SUBITEM PUNKTE.html');
    ClearBlock('ARTIKEL EVEN');
    ClearBlock('ARTIKEL ODD');
    ClearBlock('MWST');
    ClearBlock('PUNKTE');

    // Ausgabe, jetzt unverändert ausgeben!
    with IB_query2 do
    begin
      _Summe := 0.0;
      _Gewicht := 0;
      MwStAnz := 0;
      EvenOddCounter := 0;
      EvenOddCounterPackListe := 0;
      SetLength(MwStSaver, MwStAnz);
      First;
      while not (eof) do
      begin

        if EvenOddCounter mod 2 = 0 then
          LoadBlockFromFile('ARTIKEL', MyProgramPath + cHTMLBlocksDir + 'SUBITEM ARTIKEL EVEN.html')
        else
          LoadBlockFromFile('ARTIKEL', MyProgramPath + cHTMLBlocksDir + 'SUBITEM ARTIKEL ODD.html');
        inc(EvenOddCounter);

        DataModuleeCommerce.e_r_PostenInfo(IB_Query2, NurGeliefertes, EinzelPreisNetto,
          _Anz,
          _AnzAuftrag,
          _AnzGeliefert,
          _AnzStorniert,
          _AnzNachlieferung,
          _Rabatt,
          _EinzelPreisUnrabattiert,
          _EinzelPreis,
          _MwStSatz

          );

        if _Rabatt > 0 then
          WriteValue('Einzel', format('%.2m (-%.0f%%)', [_EinzelPreisUnrabattiert, _Rabatt]))
        else
          WriteValue('Einzel', format('%.2m', [_EinzelPreis]));

        WriteValue('MwSt', format('%2.f', [_MwStSatz]) + '%');

        if (_Anz <> _AnzAuftrag) then
        begin
          WriteValue('Anz', inttostr(_Anz) + '/' + inttostr(_AnzAuftrag));
        end else
        begin
          WriteValue('Anz', inttostr(_Anz));
        end;

        _AddText := '';

        // storniert oder nicht mehr lieferbar
        if _AnzStorniert > 0 then
          _AddText := _AddText + #13 + format(iNichtMehrLieferbar, [_AnzStorniert]);

        // wurde bereits geliefert
        if _AnzGeliefert > 0 then
          _AddText := _AddText + #13 + format(iBereitsGeliefertInfo, [_AnzGeliefert]);

        // wird nachgeliefert
        if _AnzNachlieferung > 0 then
          _AddText := _AddText + #13 + format(iNachlieferungInfo, [_AnzNachlieferung]);

        WriteValue('Text', FieldByName('ARTIKEL').AsString + _AddText);

        if not (FieldByName('ARTIKEL_R').IsNull) then
        begin


          with IB_Query3 do
          begin

      //
            ParamByName('CROSSREF').AsInteger := IB_query2.FieldByName('ARTIKEL_R').AsInteger;


            FieldByName('INTERN_INFO').AssignTo(ArtikelInfo);
            WriteValue('No', FieldByName('NUMERO').AsString);

      // Sortiment laden
            IB_Query4.ParamByName('CROSSREF').AsInteger := FieldByName('SORTIMENT_R').AsInteger;

            if IB_Query4.IsEmpty then
              ShowMEssage(' ERROR:SORTIMENT_R link failed!');

      // Lager-Packliste ausgeben!
            if (IB_Query2.FieldByName('MENGE_RECHNUNG').AsInteger > 0) or
              (IB_Query2.FieldByName('MENGE_GELIEFERT').AsInteger > 0) then
            begin

              if (EvenOddCounterPackListe mod 2 = 0) then
                MyPackListe.LoadBlockFromFile('ARTIKEL', MyProgramPath + cHTMLBlocksDir + 'SUBITEM PACKLISTE ARTIKEL EVEN.html')
              else
                MyPackListe.LoadBlockFromFile('ARTIKEL', MyProgramPath + cHTMLBlocksDir + 'SUBITEM PACKLISTE ARTIKEL ODD.html');
              inc(EvenOddCounterPackListe);

              MyPackListe.WriteValue('Anz', inttostr(IB_Query2.FieldByName('MENGE_RECHNUNG').AsInteger) + '/(' +
                inttostr(IB_Query2.FieldByName('MENGE_GELIEFERT').AsInteger) + ')'
                );
              MyPackListe.WriteValue('No', FieldByName('NUMERO').AsString + #13 +
                FormVerlag.ObtainVerlagFromPERSON_RID(FieldByName('VERLAG_R').AsInteger) +
                '-' +
                FieldByName('VERLAGNO').AsString
                );
              MyPackListe.WriteValue('Text', FieldByName('TITEL').AsString + #13 +
                ArtikelInfo.Values['BEM']);
              MyPackListe.WriteValue('Lager', FormLager.ObtainNameFromRID(FieldByName('LAGER_R').AsInteger));
            end;
          end;

        end else
        begin
          WriteValue('No', '-');
        end;

        _PreisProPosition := _EinzelPreis * _Anz;
        _GewichtProPosition := FieldByName('GEWICHT').AsInteger * _Anz;

        AddLine(_MwStSatz, _PreisProPosition);

        _Summe := _Summe + _PreisProPosition;
        _Gewicht := _Gewicht + _GewichtProPosition;

        if (_Anz > 0) then
        begin
          WriteValue('Brutto', format('%.2m', [_PreisProPosition]));
        end else
        begin
          WriteValue('Brutto', '');
        end;

        next;
      end;
      EnableControls;
    end;

    _Netto := _summe;
    for n := 0 to pred(MwStAnz) do
    begin
      if (MwStSaver[n].Summe > 0) and (MwStSaver[n].Satz > 0) then
      begin
        LoadBlockFromFile('MWST', MyProgramPath + cHTMLBlocksDir + 'SUBITEM MWST.html');
        _NettoInDieserMwStKlasse := MwStSaver[n].Summe -
          (MwStSaver[n].Summe / (1.0 + MwStSaver[n].Satz / 100.0));
        _NettoInDieserMwStKlasse := round(_NettoInDieserMwStKlasse * 100.0) / 100.0;
        WriteValue('PR', format('%.0f', [MwStSaver[n].Satz]));
        WriteValue('MW', format('%.2m', [_NettoInDieserMwStKlasse]));
        WriteValue('MS', format('%.2m', [MwStSaver[n].Summe]));
        _netto := _netto - _NettoInDieserMwStKlasse;
      end;
    end;
    WriteValue('ZS', format('%.2m', [_Netto]));
    WriteValue('RB', format('%.2m', [_summe]));

    WriteValue('RBEURO', format('%.2f DM', [_summe * cEuro]));

  // Anschrift extrahieren!
    IB_Query7.FieldByName('BEMERKUNG').AssignTo(AnschriftInfo);


    WriteValue('Anrede', IB_Query7.FieldByName('ANREDE').AsString );
    WriteValue('Ansprache', IB_Query7.FieldByName('ANSPRACHE').AsString );
    MyPackliste.WriteValue('Anrede', IB_Query7.FieldByName('ANREDE').AsString );
    MyPackliste.WriteValue('Ansprache', IB_Query7.FieldByName('ANSPRACHE').AsString );
    WriteValue('Name', IB_Query7.FieldByName('VORNAME').AsString + ' ' +
      IB_Query7.FieldByName('NACHNAME').AsString);
    MyPackliste.WriteValue('Name', IB_Query7.FieldByName('VORNAME').AsString + ' ' +
      IB_Query7.FieldByName('NACHNAME').AsString);

    with IB_Query8 do
    begin
      WriteValue('Name1', FieldByName('NAME1').AsString);
      MyPackliste.WriteValue('Name1', FieldByName('NAME1').AsString);
      WriteValue('Strasse', FieldByName('STRASSE').AsString);
      MyPackliste.WriteValue('Strasse', FieldByName('STRASSE').AsString);
      WriteValue('Ort', __ort(IB_Query8));
      MyPackliste.WriteValue('Ort', __ort(IB_Query8));

      _ustid := FieldByName('UST_ID').AsString;
      if _ustid <> '' then
      begin
        WriteValue('USTID', _ustid);
      end else
      begin
        ClearBlock('USTID_A');
        ClearBlock('USTID_B');
      end;
    end;

    WriteValue('Datum', long2date(DateTime2long(IB_Query1.FieldByName('RECHNUNG').AsDateTime)));
    MyPackListe.WriteValue('Datum', long2date(DateTime2long(IB_Query1.FieldByName('RECHNUNG').AsDateTime)));
    WriteValue('Zahldatum', long2date(DateTime2long(IB_Query1.FieldByName('FAELLIG').AsDateTime)));
    MyPackListe.WriteValue('Zahldatum', long2date(DateTime2long(IB_Query1.FieldByName('FAELLIG').AsDateTime)));

    WriteValue('K#', IB_Query7.FieldByName('NUMMER').AsString);
    MyPackListe.WriteValue('K#', IB_Query7.FieldByName('NUMMER').AsString);

    WriteValue('Medium', IB_Query1.FieldByName('MEDIUM').AsString);
    MyPackListe.WriteValue('Medium', IB_Query1.FieldByName('MEDIUM').AsString);

    if not (IB_Query1.FieldByName('RECHNUNGSANSCHRIFT_R').IsNull) then
    begin
      LoadBlockFromFile('PUNKTE', MyProgramPath + cHTMLBlocksDir + 'SUBITEM PUNKTE.html');
      WriteValue('PunkteText', 'Auftrag von ' + label5.caption);
    end;

    if not (AlsLieferschein) then
      if not (IB_Query1.FieldByName('LIEFERANSCHRIFT_R').IsNull) then
      begin
        LoadBlockFromFile('PUNKTE', MyProgramPath + cHTMLBlocksDir + 'SUBITEM PUNKTE.html');
        WriteValue('PunkteText', 'Lieferung an ' + label6.caption);
      end;

    if length(iStandardTextRechnung) > 0 then
    begin
      LoadBlockFromFile('PUNKTE', MyProgramPath + cHTMLBlocksDir + 'SUBITEM PUNKTE.html');
      WriteValue('PunkteText', iStandardTextRechnung);
    end;

    // weitere Bemerkungen hinzufügen!
    if not (IB_Query1.FieldByName('KUNDEN_INFO').IsNull) then
    begin
      IB_Query1.FieldByName('KUNDEN_INFO').AssignTo(KundenInfo);
      if (KundenInfo.count > 0) then
      begin
        LoadBlockFromFile('PUNKTE', MyProgramPath + cHTMLBlocksDir + 'SUBITEM PUNKTE.html');
        _AddText := KundenInfo[0];
        for n := 1 to pred(KundenInfo.count) do
          _AddText := _AddText + #13 + KundenInfo[n];
        WriteValue('PunkteText', _AddText);
      end;

    end;

    // Anzeigen, bzw. drucken
    SaveToFileCompressed(UserDir + 'Rechnung.html');
    MyPackliste.SaveToFileCompressed(UserDir + 'Packliste.html');

  end;

  MyBeleg.free;
  MyPackliste.free;

  AnschriftInfo.free;
  ArtikelInfo.free;
  KundenInfo.free;

  EndHourGlass;
  BerechneBelegActive := false;
end;
