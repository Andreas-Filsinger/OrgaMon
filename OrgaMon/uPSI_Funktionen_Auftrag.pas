unit uPSI_Funktionen_Auftrag;
{
This file has been generated by UnitParser v0.7, written by M. Knight
and updated by NP. v/d Spek and George Birbilis. 
Source Code from Carlo Kok has been used to implement various sections of
UnitParser. Components of ROPS are used in the construction of UnitParser,
code implementing the class wrapper is taken from Carlo Kok's conv utility

}
interface
 

 
uses
   SysUtils
  ,Classes
  ,uPSComponent
  ,uPSRuntime
  ,uPSCompiler
  ;
 
type 
(*----------------------------------------------------------------------------*)
  TPSImport_Funktionen_Auftrag = class(TPSPlugin)
  public
    procedure CompileImport1(CompExec: TPSScript); override;
    procedure ExecImport1(CompExec: TPSScript; const ri: TPSRuntimeClassImporter); override;
  end;
 
 
{ compile-time registration functions }
procedure SIRegister_Funktionen_Auftrag(CL: TPSPascalCompiler);

{ run-time registration functions }
procedure RIRegister_Funktionen_Auftrag_Routines(S: TPSExec);

procedure Register;

implementation


uses
   IB_Components
  ,Sperre
  ,IBExportTable
  ,gplists
  ,anfix32
  ,globals
  ,txHoliday
  ,Funktionen.Auftrag
  ;
 
 
procedure Register;
begin
  RegisterComponents('Pascal Script', [TPSImport_Funktionen_Auftrag]);
end;

(* === compile-time registration functions === *)
(*----------------------------------------------------------------------------*)
Function BoolToStr(value : boolean) : string;
Begin If value then Result := 'TRUE' else Result := 'FALSE' End;

(*----------------------------------------------------------------------------*)
procedure SIRegister_Funktionen_Auftrag(CL: TPSPascalCompiler);
begin
// CL.AddConstantN('IgnoreAuftragPost','boolean').BoolToStr( false);
// CL.AddConstantN('ForceHistorischer','boolean').BoolToStr( false);
// CL.AddConstantN('HistorischerErzeugt','boolean')BoolToStr( false);
// CL.AddConstantN('AuftragLastChangeFields','TStringList').SetString();
// CL.AddConstantN('AuftragCriticalFields','TStringList').SetString();
 CL.AddConstantN('AuftragLastChangeRID','Integer').SetInt( 0);
 CL.AddConstantN('HANDLUNGSBEDARF_POSTEN_RID','Integer').SetInt( 0);
 CL.AddConstantN('HANDLUNGSBEDARF_MEILENSTEIN_RID','Integer').SetInt( 0);
 CL.AddDelphiFunction('Procedure AuftragHistorischerDatensatz( AUFTRAG_R : Integer)');
 CL.AddDelphiFunction('Procedure AuftragHistorischerDatensatz2( AUFTRAG_R : TList);');
 CL.AddDelphiFunction('Procedure AuftragBeforePost( Auftrag : TIB_Dataset; ReOrgMode : boolean)');
 CL.AddDelphiFunction('Function e_w_AuftragDelete( Master_R : Integer) : Integer');
 CL.AddDelphiFunction('Procedure e_w_AuftragAblage( Master_R : Integer)');
 CL.AddDelphiFunction('Procedure RecourseDeleteAUFTRAG( RIDList : TList; var DeleteCount : Integer)');
 CL.AddDelphiFunction('Function e_r_PhasenStatus( AUFTRAG_R : Integer) : string');
 CL.AddDelphiFunction('Function e_c_AuftragHeader : TStringList');
 CL.AddDelphiFunction('Function e_r_AuftragItems( AUFTRAG_R : Integer) : TStringList');
 CL.AddDelphiFunction('Procedure InvalidateCache_Auftrag');
 CL.AddDelphiFunction('Procedure e_w_AuftrageMail( AUFTRAG_R : Integer)');
 CL.AddDelphiFunction('Function e_r_VorlageMail( VorlageName : string) : Integer');
 CL.AddDelphiFunction('Procedure EnsureHints( hints : TStrings)');
 CL.AddDelphiFunction('Procedure e_w_QAuftragEnsure( AUFTRAG_R : Integer)');
 CL.AddDelphiFunction('Function e_r_Person( PERSON_R : Integer) : string');
 CL.AddDelphiFunction('Function e_r_Person2Zeiler( PERSON_R : Integer) : TStringList');
 CL.AddDelphiFunction('Function e_r_MonteurRIDFromKuerzel( str : string) : Integer');
 CL.AddDelphiFunction('Function e_r_MonteurRIDfromGeraeteID( str : string) : Integer');
 CL.AddDelphiFunction('Function e_r_MonteurKuerzel( rid : Integer) : string');
 CL.AddDelphiFunction('Function e_r_MonteurName( rid : Integer) : string');
 CL.AddDelphiFunction('Function e_r_MonteurHandy( rid : Integer) : string');
 CL.AddDelphiFunction('Function e_r_MonteurGeraeteID( rid : Integer) : string');
 CL.AddDelphiFunction('Procedure e_r_MonteurUrlaub( rid : Integer; Urlaub : TSperre)');
 CL.AddDelphiFunction('Procedure e_r_MonteurArbeit( rid : Integer; Arbeit : TSperre)');
 CL.AddDelphiFunction('Procedure e_r_MonteurZuordnung( MONTEUR_R : Integer; Arbeit : TSperre)');
 CL.AddDelphiFunction('Function e_r_MonteureCache( Alle : boolean) : TStringList');
 CL.AddDelphiFunction('Function e_r_MonteureJonDa( Alle : boolean) : TStringList');
 CL.AddDelphiFunction('Procedure InvalidateCache_Monteur');
 CL.AddDelphiFunction('Function e_r_Verlag_VERLAG_R( rid : Integer) : string');
 CL.AddDelphiFunction('Function e_r_Verlag_PERSON_R( rid : Integer) : string');
 CL.AddDelphiFunction('Function e_r_Verlag_R( s : string) : Integer');
 CL.AddDelphiFunction('Function e_r_Verlag_R2( rid : Integer) : Integer;');
 CL.AddDelphiFunction('Function e_r_VerlagPerson( Verlag : string) : Integer');
 CL.AddDelphiFunction('Function e_r_VerlagAlias( VERLAG_R : Integer) : Integer');
 CL.AddDelphiFunction('Function e_r_Verlage2 : TStringList');
 CL.AddDelphiFunction('Function e_r_Verlage1 : TStringList');
 CL.AddDelphiFunction('Procedure InvalidateCache_Verlag');
 CL.AddDelphiFunction('Function e_r_BaustelleKuerzel( rid : Integer) : string');
 CL.AddDelphiFunction('Function e_r_BaustelleKostenstelle( BAUSTELLE_R : Integer) : string');
 CL.AddDelphiFunction('Function e_r_BaustelleBundesland( BAUSTELLE_R : Integer) : Integer');
 CL.AddDelphiFunction('Function e_r_BaustelleProtokollName( AUFTRAG_R : Integer; BAUSTELLE_R : Integer) : string');
 CL.AddDelphiFunction('Function e_r_BaustelleName( rid : Integer) : string');
 CL.AddDelphiFunction('Function e_r_BaustelleCSV_QUELLE( rid : Integer) : string');
 CL.AddDelphiFunction('Function e_r_BaustelleNameFromKuerzel( KUERZEL : string) : string');
 CL.AddDelphiFunction('Function e_r_BaustelleRIDFromKuerzel( KUERZEL : string) : Integer');
 CL.AddDelphiFunction('Function e_r_BaustelleMonteure( rid : Integer) : TStringList');
 CL.AddDelphiFunction('Function e_r_Monteure( BAUSTELLE_R : Integer) : TgpIntegerList');
 CL.AddDelphiFunction('Function e_r_Baustellen : TStringList');
 CL.AddDelphiFunction('Function e_r_BaustellenLang : TStringList');
 CL.AddDelphiFunction('Function e_r_BaustellenAktive : TStringList');
 CL.AddDelphiFunction('Procedure e_w_GrabFotos');
 CL.AddDelphiFunction('Function e_r_TerminAnzahl_V( rid : Integer) : Integer');
 CL.AddDelphiFunction('Function e_r_TerminAnzahl_N( rid : Integer) : Integer');
 CL.AddDelphiFunction('Function e_r_TerminAnzahl_VN( rid : Integer) : Integer');
 CL.AddDelphiFunction('Function e_r_Arbeitszeit_V( rid : Integer) : TAnfixTime');
 CL.AddDelphiFunction('Function e_r_Arbeitszeit_N( rid : Integer) : TAnfixTime');
 CL.AddDelphiFunction('Function e_r_EinzelAufwand( rid : Integer) : TAnfixTime');
 CL.AddDelphiFunction('Function e_r_OrtsteilCode( BAUSTELLE_R : Integer; Ort : string) : string');
 CL.AddDelphiFunction('Procedure e_r_ProtokollExport( BAUSTELLE_R : Integer; FelderListe : TStringList)');
 CL.AddDelphiFunction('Procedure e_r_InternExport( BAUSTELLE_R : Integer; FelderListe : TStringList)');
 CL.AddDelphiFunction('Function e_r_BaustelleAddSperre( BAUSTELLE_R : Integer; Umstand : TStrings; Sperre : TSperre) : Integer');
 CL.AddDelphiFunction('Procedure InvalidateCache_Baustelle');
 CL.AddDelphiFunction('Procedure ReCreateAktiveBaustellen');
 CL.AddDelphiFunction('Function e_r_Baustelle( MONTEUR_R : Integer; MOMENT : TDateTime; var Wertigkeit : TeWertigkeitBaustellenzuordnung) : Integer');
 CL.AddDelphiFunction('Function e_r_Arbeit( MONTEUR_R : Integer; ArbeitsTag : TANFiXDate) : string');
 CL.AddDelphiFunction('Procedure EnsureCache_ArbeitBaustelle');
 CL.AddDelphiFunction('Procedure InvalidateCache_ArbeitBaustelle');
 CL.AddDelphiFunction('Function e_r_Einsatz( MONTEUR_R : Integer; ArbeitsTag : TANFiXDate) : string');
 CL.AddDelphiFunction('Function e_r_Halbtage( MONTEUR_R, BAUSTELLE_R : Integer; ArbeitsTag : TANFiXDate) : Integer');
 CL.AddDelphiFunction('Function DeleteGeo( AUFTRAG_R : Integer) : Integer');
 CL.AddDelphiFunction('Function dummyPLZ_R : Integer');
 CL.AddDelphiFunction('Procedure e_w_unlocate( POSTLEITZAHL_R : Integer)');
 CL.AddDelphiFunction('Function e_r_BearbeiterEinstellungen( BEARBEITER_R : Integer) : TStringList');
 CL.AddDelphiFunction('Function e_w_BudgetEinfuegen( BELEG_R : Integer; SubBudget : string; PERSON_R : Integer; moreSettings : TStringList) : Integer');
 CL.AddDelphiFunction('Procedure e_w_BudgetAbschreiben( BELEG_R : Integer; FName : string)');
 CL.AddDelphiFunction('Function DoppelAngabe( v, n : string) : string');
 CL.AddDelphiFunction('Function Feiertage : TSperreOfficalHolidays');
 CL.AddDelphiFunction('Function LieferzeitToStr( i : TAnfixTime) : string');
 CL.AddDelphiFunction('Function LieferzeitInTagen( i : Integer) : Integer');
 CL.AddDelphiFunction('Function VersendetagToStr( i : Integer) : string');
 CL.AddDelphiFunction('Function Liefertag( Liefertag : TAnfixTime) : TAnfixTime');
 CL.AddDelphiFunction('Function VormittagsToChar( vormittags : boolean) : char');
 CL.AddDelphiFunction('Function VormittagsToTime( s : string) : TDateTime');
 CL.AddDelphiFunction('Procedure SplitStrasse( const _strasseFull : string; var _FirstNummernPos, _LastNummernPos : Integer)');
 CL.AddDelphiFunction('Function ObtainStrassenName( const _strasseFull : string) : string');
 CL.AddDelphiFunction('Function ObtainStrassenHausNummer( const _strasseFull : string) : string');
 CL.AddDelphiFunction('Function ObtainStrassenHausNummerOhneZusatz( const _strasseFull : string) : string');
 CL.AddDelphiFunction('Function ObtainStrassenHausNummerZusatz( const _strasseFull : string) : string');
 CL.AddDelphiFunction('Function ObtainStrassenHausNummerNumerischerZusatz( const _strasseFull : string) : string');
 CL.AddDelphiFunction('Function StrasseUnify( a : string) : string');
 CL.AddDelphiFunction('Function StrassenNameIdentisch( a, b : string) : boolean');
 CL.AddDelphiFunction('Function OrtIdentisch( a, b : string) : boolean');
 CL.AddDelphiFunction('Function SAP2Art( Material : string) : string');
end;

(* === run-time registration functions === *)
(*----------------------------------------------------------------------------*)
Function e_r_Verlag_R2_P( rid : Integer) : Integer;
Begin Result := e_r_Verlag_R(rid); END;

(*----------------------------------------------------------------------------*)
Procedure AuftragHistorischerDatensatz2_P( AUFTRAG_R : TList);
Begin AuftragHistorischerDatensatz(AUFTRAG_R); END;

(*----------------------------------------------------------------------------*)
procedure RIRegister_Funktionen_Auftrag_Routines(S: TPSExec);
begin
 S.RegisterDelphiFunction(@AuftragHistorischerDatensatz, 'AuftragHistorischerDatensatz', cdRegister);
 S.RegisterDelphiFunction(@AuftragHistorischerDatensatz2_P, 'AuftragHistorischerDatensatz2', cdRegister);
 S.RegisterDelphiFunction(@AuftragBeforePost, 'AuftragBeforePost', cdRegister);
 S.RegisterDelphiFunction(@e_w_AuftragDelete, 'e_w_AuftragDelete', cdRegister);
 S.RegisterDelphiFunction(@e_w_AuftragAblage, 'e_w_AuftragAblage', cdRegister);
 S.RegisterDelphiFunction(@RecourseDeleteAUFTRAG, 'RecourseDeleteAUFTRAG', cdRegister);
 S.RegisterDelphiFunction(@e_r_PhasenStatus, 'e_r_PhasenStatus', cdRegister);
 S.RegisterDelphiFunction(@e_c_AuftragHeader, 'e_c_AuftragHeader', cdRegister);
 S.RegisterDelphiFunction(@e_r_AuftragItems, 'e_r_AuftragItems', cdRegister);
 S.RegisterDelphiFunction(@InvalidateCache_Auftrag, 'InvalidateCache_Auftrag', cdRegister);
 S.RegisterDelphiFunction(@e_w_AuftrageMail, 'e_w_AuftrageMail', cdRegister);
 S.RegisterDelphiFunction(@e_r_VorlageMail, 'e_r_VorlageMail', cdRegister);
 S.RegisterDelphiFunction(@EnsureHints, 'EnsureHints', cdRegister);
 S.RegisterDelphiFunction(@e_w_QAuftragEnsure, 'e_w_QAuftragEnsure', cdRegister);
 S.RegisterDelphiFunction(@e_r_Person, 'e_r_Person', cdRegister);
 S.RegisterDelphiFunction(@e_r_Person2Zeiler, 'e_r_Person2Zeiler', cdRegister);
 S.RegisterDelphiFunction(@e_r_MonteurRIDFromKuerzel, 'e_r_MonteurRIDFromKuerzel', cdRegister);
 S.RegisterDelphiFunction(@e_r_MonteurRIDfromGeraeteID, 'e_r_MonteurRIDfromGeraeteID', cdRegister);
 S.RegisterDelphiFunction(@e_r_MonteurKuerzel, 'e_r_MonteurKuerzel', cdRegister);
 S.RegisterDelphiFunction(@e_r_MonteurName, 'e_r_MonteurName', cdRegister);
 S.RegisterDelphiFunction(@e_r_MonteurHandy, 'e_r_MonteurHandy', cdRegister);
 S.RegisterDelphiFunction(@e_r_MonteurGeraeteID, 'e_r_MonteurGeraeteID', cdRegister);
 S.RegisterDelphiFunction(@e_r_MonteurUrlaub, 'e_r_MonteurUrlaub', cdRegister);
 S.RegisterDelphiFunction(@e_r_MonteurArbeit, 'e_r_MonteurArbeit', cdRegister);
 S.RegisterDelphiFunction(@e_r_MonteurZuordnung, 'e_r_MonteurZuordnung', cdRegister);
 S.RegisterDelphiFunction(@e_r_MonteureCache, 'e_r_MonteureCache', cdRegister);
 S.RegisterDelphiFunction(@e_r_MonteureJonDa, 'e_r_MonteureJonDa', cdRegister);
 S.RegisterDelphiFunction(@InvalidateCache_Monteur, 'InvalidateCache_Monteur', cdRegister);
 S.RegisterDelphiFunction(@e_r_Verlag_VERLAG_R, 'e_r_Verlag_VERLAG_R', cdRegister);
 S.RegisterDelphiFunction(@e_r_Verlag_PERSON_R, 'e_r_Verlag_PERSON_R', cdRegister);
 S.RegisterDelphiFunction(@e_r_Verlag_R, 'e_r_Verlag_R', cdRegister);
 S.RegisterDelphiFunction(@e_r_Verlag_R2_P, 'e_r_Verlag_R2', cdRegister);
 S.RegisterDelphiFunction(@e_r_VerlagPerson, 'e_r_VerlagPerson', cdRegister);
 S.RegisterDelphiFunction(@e_r_VerlagAlias, 'e_r_VerlagAlias', cdRegister);
 S.RegisterDelphiFunction(@e_r_Verlage2, 'e_r_Verlage2', cdRegister);
 S.RegisterDelphiFunction(@e_r_Verlage1, 'e_r_Verlage1', cdRegister);
 S.RegisterDelphiFunction(@InvalidateCache_Verlag, 'InvalidateCache_Verlag', cdRegister);
 S.RegisterDelphiFunction(@e_r_BaustelleKuerzel, 'e_r_BaustelleKuerzel', cdRegister);
 S.RegisterDelphiFunction(@e_r_BaustelleKostenstelle, 'e_r_BaustelleKostenstelle', cdRegister);
 S.RegisterDelphiFunction(@e_r_BaustelleBundesland, 'e_r_BaustelleBundesland', cdRegister);
 S.RegisterDelphiFunction(@e_r_BaustelleProtokollName, 'e_r_BaustelleProtokollName', cdRegister);
 S.RegisterDelphiFunction(@e_r_BaustelleName, 'e_r_BaustelleName', cdRegister);
 S.RegisterDelphiFunction(@e_r_BaustelleCSV_QUELLE, 'e_r_BaustelleCSV_QUELLE', cdRegister);
 S.RegisterDelphiFunction(@e_r_BaustelleNameFromKuerzel, 'e_r_BaustelleNameFromKuerzel', cdRegister);
 S.RegisterDelphiFunction(@e_r_BaustelleRIDFromKuerzel, 'e_r_BaustelleRIDFromKuerzel', cdRegister);
 S.RegisterDelphiFunction(@e_r_BaustelleMonteure, 'e_r_BaustelleMonteure', cdRegister);
 S.RegisterDelphiFunction(@e_r_Monteure, 'e_r_Monteure', cdRegister);
 S.RegisterDelphiFunction(@e_r_Baustellen, 'e_r_Baustellen', cdRegister);
 S.RegisterDelphiFunction(@e_r_BaustellenLang, 'e_r_BaustellenLang', cdRegister);
 S.RegisterDelphiFunction(@e_r_BaustellenAktive, 'e_r_BaustellenAktive', cdRegister);
 S.RegisterDelphiFunction(@e_w_GrabFotos, 'e_w_GrabFotos', cdRegister);
 S.RegisterDelphiFunction(@e_r_TerminAnzahl_V, 'e_r_TerminAnzahl_V', cdRegister);
 S.RegisterDelphiFunction(@e_r_TerminAnzahl_N, 'e_r_TerminAnzahl_N', cdRegister);
 S.RegisterDelphiFunction(@e_r_TerminAnzahl_VN, 'e_r_TerminAnzahl_VN', cdRegister);
 S.RegisterDelphiFunction(@e_r_Arbeitszeit_V, 'e_r_Arbeitszeit_V', cdRegister);
 S.RegisterDelphiFunction(@e_r_Arbeitszeit_N, 'e_r_Arbeitszeit_N', cdRegister);
 S.RegisterDelphiFunction(@e_r_EinzelAufwand, 'e_r_EinzelAufwand', cdRegister);
 S.RegisterDelphiFunction(@e_r_OrtsteilCode, 'e_r_OrtsteilCode', cdRegister);
 S.RegisterDelphiFunction(@e_r_ProtokollExport, 'e_r_ProtokollExport', cdRegister);
 S.RegisterDelphiFunction(@e_r_InternExport, 'e_r_InternExport', cdRegister);
 S.RegisterDelphiFunction(@e_r_BaustelleAddSperre, 'e_r_BaustelleAddSperre', cdRegister);
 S.RegisterDelphiFunction(@InvalidateCache_Baustelle, 'InvalidateCache_Baustelle', cdRegister);
 S.RegisterDelphiFunction(@ReCreateAktiveBaustellen, 'ReCreateAktiveBaustellen', cdRegister);
 S.RegisterDelphiFunction(@e_r_Baustelle, 'e_r_Baustelle', cdRegister);
 S.RegisterDelphiFunction(@e_r_Arbeit, 'e_r_Arbeit', cdRegister);
 S.RegisterDelphiFunction(@EnsureCache_ArbeitBaustelle, 'EnsureCache_ArbeitBaustelle', cdRegister);
 S.RegisterDelphiFunction(@InvalidateCache_ArbeitBaustelle, 'InvalidateCache_ArbeitBaustelle', cdRegister);
 S.RegisterDelphiFunction(@e_r_Einsatz, 'e_r_Einsatz', cdRegister);
 S.RegisterDelphiFunction(@e_r_Halbtage, 'e_r_Halbtage', cdRegister);
 S.RegisterDelphiFunction(@DeleteGeo, 'DeleteGeo', cdRegister);
 S.RegisterDelphiFunction(@dummyPLZ_R, 'dummyPLZ_R', cdRegister);
 S.RegisterDelphiFunction(@e_w_unlocate, 'e_w_unlocate', cdRegister);
 S.RegisterDelphiFunction(@e_r_BearbeiterEinstellungen, 'e_r_BearbeiterEinstellungen', cdRegister);
 S.RegisterDelphiFunction(@e_w_BudgetEinfuegen, 'e_w_BudgetEinfuegen', cdRegister);
 S.RegisterDelphiFunction(@e_w_BudgetAbschreiben, 'e_w_BudgetAbschreiben', cdRegister);
 S.RegisterDelphiFunction(@DoppelAngabe, 'DoppelAngabe', cdRegister);
 S.RegisterDelphiFunction(@Feiertage, 'Feiertage', cdRegister);
 S.RegisterDelphiFunction(@LieferzeitToStr, 'LieferzeitToStr', cdRegister);
 S.RegisterDelphiFunction(@LieferzeitInTagen, 'LieferzeitInTagen', cdRegister);
 S.RegisterDelphiFunction(@VersendetagToStr, 'VersendetagToStr', cdRegister);
 S.RegisterDelphiFunction(@Liefertag, 'Liefertag', cdRegister);
 S.RegisterDelphiFunction(@VormittagsToChar, 'VormittagsToChar', cdRegister);
 S.RegisterDelphiFunction(@VormittagsToTime, 'VormittagsToTime', cdRegister);
 S.RegisterDelphiFunction(@ObtainStrasseHausnummerPos, 'SplitStrasse', cdRegister);
 S.RegisterDelphiFunction(@ObtainStrassenName, 'ObtainStrassenName', cdRegister);
 S.RegisterDelphiFunction(@ObtainStrassenHausNummer, 'ObtainStrassenHausNummer', cdRegister);
 S.RegisterDelphiFunction(@ObtainStrassenHausNummerOhneZusatz, 'ObtainStrassenHausNummerOhneZusatz', cdRegister);
 S.RegisterDelphiFunction(@ObtainStrassenHausNummerZusatz, 'ObtainStrassenHausNummerZusatz', cdRegister);
 S.RegisterDelphiFunction(@ObtainStrassenHausNummerNumerischerZusatz, 'ObtainStrassenHausNummerNumerischerZusatz', cdRegister);
 S.RegisterDelphiFunction(@StrasseUnify, 'StrasseUnify', cdRegister);
 S.RegisterDelphiFunction(@StrassenNameIdentisch, 'StrassenNameIdentisch', cdRegister);
 S.RegisterDelphiFunction(@OrtIdentisch, 'OrtIdentisch', cdRegister);
 S.RegisterDelphiFunction(@SAP2Art, 'SAP2Art', cdRegister);
end;

 
 
{ TPSImport_Funktionen_Auftrag }
(*----------------------------------------------------------------------------*)
procedure TPSImport_Funktionen_Auftrag.CompileImport1(CompExec: TPSScript);
begin
  SIRegister_Funktionen_Auftrag(CompExec.Comp);
end;
(*----------------------------------------------------------------------------*)
procedure TPSImport_Funktionen_Auftrag.ExecImport1(CompExec: TPSScript; const ri: TPSRuntimeClassImporter);
begin
  RIRegister_Funktionen_Auftrag_Routines(CompExec.Exec); // comment it if no routines
end;
(*----------------------------------------------------------------------------*)
 
 
end.
