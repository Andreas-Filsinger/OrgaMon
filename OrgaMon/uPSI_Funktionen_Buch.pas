unit uPSI_Funktionen_Buch;
{
This file has been generated by UnitParser v0.7, written by M. Knight
and updated by NP. v/d Spek and George Birbilis. 
Source Code from Carlo Kok has been used to implement various sections of
UnitParser. Components of ROPS are used in the construction of UnitParser,
code implementing the class wrapper is taken from Carlo Kok's conv utility

}
interface
 

 
uses
   SysUtils
  ,Classes
  ,uPSComponent
  ,uPSRuntime
  ,uPSCompiler
  ;
 
type 
(*----------------------------------------------------------------------------*)
  TPSImport_Funktionen_Buch = class(TPSPlugin)
  public
    procedure CompileImport1(CompExec: TPSScript); override;
    procedure ExecImport1(CompExec: TPSScript; const ri: TPSRuntimeClassImporter); override;
  end;
 
 
{ compile-time registration functions }
procedure SIRegister_Funktionen_Buch(CL: TPSPascalCompiler);

{ run-time registration functions }
procedure RIRegister_Funktionen_Buch_Routines(S: TPSExec);

procedure Register;

implementation


uses
   gplists
  ,anfix32
  ,Funktionen_Buch
  ;
 
 
procedure Register;
begin
  RegisterComponents('Pascal Script', [TPSImport_Funktionen_Buch]);
end;

(* === compile-time registration functions === *)
(*----------------------------------------------------------------------------*)
procedure SIRegister_Funktionen_Buch(CL: TPSPascalCompiler);
begin
 CL.AddConstantN('cBUCH_Farbe_Kalt','LongWord').SetUInt( $2222FF);
 CL.AddConstantN('cBUCH_Farbe_OK','LongWord').SetUInt( $66FF66);
 CL.AddConstantN('cBUCH_Farbe_DurchlaufenderPosten','LongWord').SetUInt( $FF99FF);
 CL.AddConstantN('cBUCH_Farbe_edit','LongWord').SetUInt( $FFFF33);
 CL.AddConstantN('cBUCH_Farbe_Ueberzahlung','LongWord').SetUInt( $FF9933);
 CL.AddConstantN('cBUCH_Farbe_Gebucht','LongWord').SetUInt( $00FF66);
 CL.AddConstantN('cBUCH_Farbe_Teilzahlung','LongWord').SetUInt( $33CCFF);
 CL.AddConstantN('cBUCH_Farbe_Neutral','LongWord').SetUInt( $DDDDDD);
 CL.AddDelphiFunction('Function e_r_InitialerBuchungssatz( BUCH_R : integer) : integer');
 CL.AddDelphiFunction('Procedure b_w_buche( BUCH_R : integer; Diagnose : TStrings)');
 CL.AddDelphiFunction('Procedure b_w_buche3( Diagnose : TStrings);');
 CL.AddDelphiFunction('Function b_w_copy( BUCH_R : integer) : integer');
 CL.AddDelphiFunction('Procedure b_w_ForderungAusgleich( sList : TStrings; Diagnose : TStrings)');
 CL.AddDelphiFunction('Procedure b_w_ForderungAusgleich2( s : String; Diagnose : TStrings);');
 CL.AddDelphiFunction('Function b_w_ForderungBuchen( BELEG_R : integer; RechnungsBetrag : double) : TStringList');
 CL.AddDelphiFunction('Procedure b_w_Rechnungsdatum( BELEG_R : integer; RechnungsDatum : TAnfixDate)');
 CL.AddDelphiFunction('Function b_r_AusgleichKonten : TStringList');
 CL.AddDelphiFunction('Function b_r_HBCIKonten : TStringList');
 CL.AddDelphiFunction('Function b_r_Konto( SORTIMENT_R : integer) : string');
 CL.AddDelphiFunction('Function b_r_KontoSuchindexFName( Konto : string) : string');
 CL.AddDelphiFunction('Function b_r_PersonSaldo( PERSON_R : integer) : double');
 CL.AddDelphiFunction('Function b_r_KontoSaldo( Konto : string; Datum : TAnfixDate) : double');
 CL.AddDelphiFunction('Function b_r_MD5( BUCH_R : integer) : string');
 CL.AddDelphiFunction('Procedure b_w_preDeleteBuch( BUCH_R : integer)');
 CL.AddDelphiFunction('Procedure b_w_DeleteBuch( BUCH_R : integer)');
end;

(* === run-time registration functions === *)
(*----------------------------------------------------------------------------*)
Procedure b_w_ForderungAusgleich2_P( s : String; Diagnose : TStrings);
Begin b_w_ForderungAusgleich(s, Diagnose); END;

(*----------------------------------------------------------------------------*)
Procedure b_w_buche3_P( Diagnose : TStrings);
Begin b_w_buche(Diagnose); END;

(*----------------------------------------------------------------------------*)
Procedure b_w_buche2_P( BUCH_R : TgpIntegerList; Diagnose : TStrings);
Begin b_w_buche(BUCH_R, Diagnose); END;

(*----------------------------------------------------------------------------*)
procedure RIRegister_Funktionen_Buch_Routines(S: TPSExec);
begin
 S.RegisterDelphiFunction(@e_r_InitialerBuchungssatz, 'e_r_InitialerBuchungssatz', cdRegister);
 S.RegisterDelphiFunction(@b_w_buche, 'b_w_buche', cdRegister);
 S.RegisterDelphiFunction(@b_w_buche3_P, 'b_w_buche3', cdRegister);
 S.RegisterDelphiFunction(@b_w_copy, 'b_w_copy', cdRegister);
 S.RegisterDelphiFunction(@b_w_ForderungAusgleich, 'b_w_ForderungAusgleich', cdRegister);
 S.RegisterDelphiFunction(@b_w_ForderungAusgleich2_P, 'b_w_ForderungAusgleich2', cdRegister);
 S.RegisterDelphiFunction(@b_w_ForderungBuchen, 'b_w_ForderungBuchen', cdRegister);
 S.RegisterDelphiFunction(@b_w_Rechnungsdatum, 'b_w_Rechnungsdatum', cdRegister);
 S.RegisterDelphiFunction(@b_r_AusgleichKonten, 'b_r_AusgleichKonten', cdRegister);
 S.RegisterDelphiFunction(@b_r_HBCIKonten, 'b_r_HBCIKonten', cdRegister);
 S.RegisterDelphiFunction(@b_r_Konto, 'b_r_Konto', cdRegister);
 S.RegisterDelphiFunction(@b_r_KontoSuchindexFName, 'b_r_KontoSuchindexFName', cdRegister);
 S.RegisterDelphiFunction(@b_r_PersonSaldo, 'b_r_PersonSaldo', cdRegister);
 S.RegisterDelphiFunction(@b_r_KontoSaldo, 'b_r_KontoSaldo', cdRegister);
 S.RegisterDelphiFunction(@b_r_MD5, 'b_r_MD5', cdRegister);
 S.RegisterDelphiFunction(@b_w_preDeleteBuch, 'b_w_preDeleteBuch', cdRegister);
 S.RegisterDelphiFunction(@b_w_DeleteBuch, 'b_w_DeleteBuch', cdRegister);
end;

 
 
{ TPSImport_Funktionen_Buch }
(*----------------------------------------------------------------------------*)
procedure TPSImport_Funktionen_Buch.CompileImport1(CompExec: TPSScript);
begin
  SIRegister_Funktionen_Buch(CompExec.Comp);
end;
(*----------------------------------------------------------------------------*)
procedure TPSImport_Funktionen_Buch.ExecImport1(CompExec: TPSScript; const ri: TPSRuntimeClassImporter);
begin
  RIRegister_Funktionen_Buch_Routines(CompExec.Exec); // comment it if no routines
end;
(*----------------------------------------------------------------------------*)
 
 
end.
