unit uPSI_eConnect;
{
This file has been generated by UnitParser v0.7, written by M. Knight
and updated by NP. v/d Spek and George Birbilis. 
Source Code from Carlo Kok has been used to implement various sections of
UnitParser. Components of ROPS are used in the construction of UnitParser,
code implementing the class wrapper is taken from Carlo Kok's conv utility

}
interface
 

 
uses
   SysUtils
  ,Classes
  ,uPSComponent
  ,uPSRuntime
  ,uPSCompiler
  ;
 
type 
(*----------------------------------------------------------------------------*)
  TPSImport_eConnect = class(TPSPlugin)
  public
    procedure CompileImport1(CompExec: TPSScript); override;
    procedure ExecImport1(CompExec: TPSScript; const ri: TPSRuntimeClassImporter); override;
  end;
 
 
{ compile-time registration functions }
procedure SIRegister_TeConnect(CL: TPSPascalCompiler);
procedure SIRegister_eConnect(CL: TPSPascalCompiler);

{ run-time registration functions }
procedure RIRegister_TeConnect(CL: TPSRuntimeClassImporter);
procedure RIRegister_eConnect(CL: TPSRuntimeClassImporter);

procedure Register;

implementation


uses
   WordIndex
  ,eConnect
  ;
 
 
procedure Register;
begin
  RegisterComponents('Pascal Script', [TPSImport_eConnect]);
end;

(* === compile-time registration functions === *)
(*----------------------------------------------------------------------------*)
procedure SIRegister_TeConnect(CL: TPSPascalCompiler);
begin
  //with RegClassS(CL,'TObject', 'TeConnect') do
  with CL.AddClassN(CL.FindClass('TObject'),'TeConnect') do
  begin
    RegisterProperty('WebShopClicks', 'integer', iptrw);
    RegisterProperty('sArtikelSuche', 'TStringList', iptrw);
    RegisterProperty('pMonatlichesLog', 'string', iptrw);
    RegisterMethod('Function CheckLoadSuchIndex( NameSpace : string) : TWordIndex');
    RegisterMethod('Procedure Log( s : string)');
    RegisterMethod('Procedure Init');
    RegisterMethod('Function rpc_e_r_ArtikelSuche( sParameter : TStringList) : TStringList');
    RegisterMethod('Function rpc_e_r_ArtikelPreis( sParameter : TStringList) : TStringList');
    RegisterMethod('Function rpc_e_r_KontoInfo( sParameter : TStringList) : TStringList');
    RegisterMethod('Function rpc_e_r_BestellInfo( sParameter : TStringList) : TStringList');
    RegisterMethod('Function rpc_e_r_Land( sParameter : TStringList) : TStringList');
    RegisterMethod('Function rpc_e_r_ArtikelVersendetag( sParameter : TStringList) : TStringList');
    RegisterMethod('Function rpc_e_r_Verlag( sParameter : TStringList) : TStringList');
    RegisterMethod('Function rpc_e_r_Versandkosten( sParameter : TStringList) : TStringList');
    RegisterMethod('Function rpc_e_r_ArtikelInfo( sParameter : TStringList) : TStringList');
    RegisterMethod('Function rpc_e_r_BasePlug( sParameter : TStringList) : TStringList');
    RegisterMethod('Function rpc_e_r_ArtikelRabattPreis( sParameter : TStringList) : TStringList');
    RegisterMethod('Function rpc_e_r_Ort( sParameter : TStringList) : TStringList');
    RegisterMethod('Function rpc_e_r_Rabatt( sParameter : TStringList) : TStringList');
    RegisterMethod('Function rpc_e_r_Preis( sParameter : TStringList) : TStringList');
    RegisterMethod('Function rpc_e_r_Kontext( sParameter : TStringList) : TStringList');
    RegisterMethod('Function rpc_e_w_Bestellen( sParameter : TStringList) : TStringList');
    RegisterMethod('Function rpc_e_w_PersonNeu( sParameter : TStringList) : TStringList');
    RegisterMethod('Function rpc_e_w_Miniscore( sParameter : TStringList) : TStringList');
    RegisterMethod('Function rpc_e_w_LoginInfo( sParameter : TStringList) : TStringList');
    RegisterMethod('Function rpc_e_w_Buchen( sParameter : TStringList) : TStringList');
  end;
end;

(*----------------------------------------------------------------------------*)
procedure SIRegister_eConnect(CL: TPSPascalCompiler);
begin
  SIRegister_TeConnect(CL);
end;

(* === run-time registration functions === *)
(*----------------------------------------------------------------------------*)
procedure TeConnectpMonatlichesLog_W(Self: TeConnect; const T: string);
Begin Self.pMonatlichesLog := T; end;

(*----------------------------------------------------------------------------*)
procedure TeConnectpMonatlichesLog_R(Self: TeConnect; var T: string);
Begin T := Self.pMonatlichesLog; end;

(*----------------------------------------------------------------------------*)
procedure TeConnectsArtikelSuche_W(Self: TeConnect; const T: TStringList);
Begin Self.sArtikelSuche := T; end;

(*----------------------------------------------------------------------------*)
procedure TeConnectsArtikelSuche_R(Self: TeConnect; var T: TStringList);
Begin T := Self.sArtikelSuche; end;

(*----------------------------------------------------------------------------*)
procedure TeConnectWebShopClicks_W(Self: TeConnect; const T: integer);
Begin Self.WebShopClicks := T; end;

(*----------------------------------------------------------------------------*)
procedure TeConnectWebShopClicks_R(Self: TeConnect; var T: integer);
Begin T := Self.WebShopClicks; end;

(*----------------------------------------------------------------------------*)
procedure RIRegister_TeConnect(CL: TPSRuntimeClassImporter);
begin
  with CL.Add(TeConnect) do
  begin
    RegisterPropertyHelper(@TeConnectWebShopClicks_R,@TeConnectWebShopClicks_W,'WebShopClicks');
    RegisterPropertyHelper(@TeConnectsArtikelSuche_R,@TeConnectsArtikelSuche_W,'sArtikelSuche');
    RegisterPropertyHelper(@TeConnectpMonatlichesLog_R,@TeConnectpMonatlichesLog_W,'pMonatlichesLog');
    RegisterMethod(@TeConnect.CheckLoadSuchIndex, 'CheckLoadSuchIndex');
    RegisterMethod(@TeConnect.Log, 'Log');
    RegisterMethod(@TeConnect.Init, 'Init');
    RegisterMethod(@TeConnect.rpc_e_r_ArtikelSuche, 'rpc_e_r_ArtikelSuche');
    RegisterMethod(@TeConnect.rpc_e_r_ArtikelPreis, 'rpc_e_r_ArtikelPreis');
    RegisterMethod(@TeConnect.rpc_e_r_KontoInfo, 'rpc_e_r_KontoInfo');
    RegisterMethod(@TeConnect.rpc_e_r_BestellInfo, 'rpc_e_r_BestellInfo');
    RegisterMethod(@TeConnect.rpc_e_r_Land, 'rpc_e_r_Land');
    RegisterMethod(@TeConnect.rpc_e_r_ArtikelVersendetag, 'rpc_e_r_ArtikelVersendetag');
    RegisterMethod(@TeConnect.rpc_e_r_Verlag, 'rpc_e_r_Verlag');
    RegisterMethod(@TeConnect.rpc_e_r_Versandkosten, 'rpc_e_r_Versandkosten');
    RegisterMethod(@TeConnect.rpc_e_r_ArtikelInfo, 'rpc_e_r_ArtikelInfo');
    RegisterMethod(@TeConnect.rpc_e_r_BasePlug, 'rpc_e_r_BasePlug');
    RegisterMethod(@TeConnect.rpc_e_r_ArtikelRabattPreis, 'rpc_e_r_ArtikelRabattPreis');
    RegisterMethod(@TeConnect.rpc_e_r_Ort, 'rpc_e_r_Ort');
    RegisterMethod(@TeConnect.rpc_e_r_Rabatt, 'rpc_e_r_Rabatt');
    RegisterMethod(@TeConnect.rpc_e_r_Preis, 'rpc_e_r_Preis');
    RegisterMethod(@TeConnect.rpc_e_w_Bestellen, 'rpc_e_w_Bestellen');
    RegisterMethod(@TeConnect.rpc_e_w_PersonNeu, 'rpc_e_w_PersonNeu');
    RegisterMethod(@TeConnect.rpc_e_w_Miniscore, 'rpc_e_w_Miniscore');
    RegisterMethod(@TeConnect.rpc_e_w_LoginInfo, 'rpc_e_w_LoginInfo');
    RegisterMethod(@TeConnect.rpc_e_w_Buchen, 'rpc_e_w_Buchen');
  end;
end;

(*----------------------------------------------------------------------------*)
procedure RIRegister_eConnect(CL: TPSRuntimeClassImporter);
begin
  RIRegister_TeConnect(CL);
end;

 
 
{ TPSImport_eConnect }
(*----------------------------------------------------------------------------*)
procedure TPSImport_eConnect.CompileImport1(CompExec: TPSScript);
begin
  SIRegister_eConnect(CompExec.Comp);
end;
(*----------------------------------------------------------------------------*)
procedure TPSImport_eConnect.ExecImport1(CompExec: TPSScript; const ri: TPSRuntimeClassImporter);
begin
  RIRegister_eConnect(ri);
end;
(*----------------------------------------------------------------------------*)
 
 
end.
