#! /bin/bash
#
# Copyright (c) 2005 Andreas Filsinger
#
#
### BEGIN INIT INFO
# Provides:          keepcon
# Required-Start:    $network $remote_fs syslog
# Required-Stop: 
# Default-Start:     3 5
# Default-Stop:      
# Description:       ensure DSL-internet with ISDN-failover
### END INIT INFO

. /etc/rc.status

rc_reset

case "$1" in
    start)
	echo -n "Starting keepcon "
	## Start daemon with startproc(8). If this fails
	## the return value is set appropriately by startproc.

        startproc /root/keepcon -a

	# Remember status and be verbose
	rc_status -v
	;;
    stop)
	echo -n "Shutting down keepcon "
	## Stop daemon with killproc(8) and if this fails
	## killproc sets the return value according to LSB.

	killproc -TERM /root/keepcon

	# Remember status and be verbose
	rc_status -v
	;;
    try-restart)
	## Do a restart only if the service was active before.
	## Note: try-restart is not (yet) part of LSB (as of 1.2)
	$0 status >/dev/null &&  $0 restart

	# Remember status and be quiet
	rc_status -v
	;;
    restart)
	## Stop the service and regardless of whether it was
	## running or not, start it again.
	$0 stop
	$0 start

	# Remember status and be quiet
	rc_status -v
	;;
    force-reload)
	## Signal the daemon to reload its config. Most daemons
	## do this on signal 1 (SIGHUP).
	## If it does not support it, restart.

	echo -n "Reload service keepcon "
	## if it supports it:
	killproc -HUP keepcon
	#touch /var/run/keepcon.pid
	rc_status -v

	## Otherwise:
	#$0 stop  &&  $0 start
	#rc_status
	;;
    reload)
	## Like force-reload, but if daemon does not support
	## signaling, do nothing (!)

	## Otherwise if it does not support reload:
	rc_failed 3
	rc_status -v
	;;
    status)
	echo -n "Checking for service keepcon "
	## Check status with checkproc(8), if process is running
	## checkproc will return with exit status 0.

	# Return value is slightly different for the status command:
	# 0 - service up and running
	# 1 - service dead, but /var/run/  pid  file exists
	# 2 - service dead, but /var/lock/ lock file exists
	# 3 - service not running (unused)
	# 4 - service status unknown :-(
	# 5--199 reserved (5--99 LSB, 100--149 distro, 150--199 appl.)
	
	# NOTE: checkproc returns LSB compliant status values.
	# NOTE: rc_status knows that we called this init script with
	# "status" option and adapts its messages accordingly.
        checkproc /root/keepcon
	rc_status -v
	;;
    probe)
	## Optional: Probe for the necessity of a reload, print out the
	## argument to this init script which is required for a reload.
	## Note: probe is not (yet) part of LSB (as of 1.2)

	;;
    *)
	echo "Usage: $0 {start|stop|status|try-restart|restart|force-reload|reload|probe}"
	exit 1
	;;
esac
rc_exit


