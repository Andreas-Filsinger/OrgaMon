#!/bin/bash
#
#
# to-do
# =====
#
# 1) umstellen auf /etc/init.d/skeleton
# 2) ev. keepcon ein interface ppp0,ippp0 übergeben lassen, wenn
#    der erste parameter leer ist
#
#

IPTABLES=/usr/sbin/iptables
DEV_LOC=eth1
DEV_EXT=$2

# Kernelmodule laden
. /etc/rc.status
rc_reset
echo -n "Wolff firewall Rev. 1.000 device $2"
rc_status -v

echo "1" > /proc/sys/net/ipv4/conf/$DEV_LOC/rp_filter
echo "0" > /proc/sys/net/ipv4/conf/$DEV_LOC/accept_redirects
echo "0" > /proc/sys/net/ipv4/conf/$DEV_LOC/accept_source_route
echo "0" > /proc/sys/net/ipv4/conf/$DEV_LOC/bootp_relay
echo "1" > /proc/sys/net/ipv4/conf/$DEV_LOC/log_martians

echo "1" > /proc/sys/net/ipv4/conf/$DEV_EXT/rp_filter
echo "0" > /proc/sys/net/ipv4/conf/$DEV_EXT/accept_redirects
echo "0" > /proc/sys/net/ipv4/conf/$DEV_EXT/accept_source_route
echo "0" > /proc/sys/net/ipv4/conf/$DEV_EXT/bootp_relay
echo "1" > /proc/sys/net/ipv4/conf/$DEV_EXT/log_martians

# done

echo "1" > /proc/sys/net/ipv4/icmp_echo_ignore_broadcasts
echo "1" > /proc/sys/net/ipv4/icmp_ignore_bogus_error_responses
echo "1" > /proc/sys/net/ipv4/ip_dynaddr
echo "1" > /proc/sys/net/ipv4/ip_forward


# Zu Anfang alles verbieten (Default Policy)
$IPTABLES -P INPUT ACCEPT
$IPTABLES -P OUTPUT ACCEPT
$IPTABLES -P FORWARD ACCEPT

# Alle Regelketten, die sich noch im Speicher befinden könnten, löschen
$IPTABLES -F
$IPTABLES -t nat -F
$IPTABLES -X

# Verbindungen für Testzwecke am eigenen Rechner über das Loopback. Einige
# lokale Prozesse wie BIND verwenden das Loopback für die interne Kommunikation
$IPTABLES -A OUTPUT -o lo -j ACCEPT
$IPTABLES -A INPUT -i lo -j ACCEPT

$IPTABLES -A INPUT -i $DEV_LOC -p tcp --sport 123 -j DROP
$IPTABLES -A INPUT -i $DEV_LOC -p udp --sport 123 -j DROP
$IPTABLES -A INPUT -i $DEV_LOC -p tcp --dport 123 -j DROP
$IPTABLES -A INPUT -i $DEV_LOC -p udp --dport 123 -j DROP

# Alle externen Verbindungsversuche und ander Merkwürdigkeiten werden hier
# aufgefangen, im SYSLOG vermerkt und dann unschädlich gemacht
$IPTABLES -N nirwana
#$IPTABLES -A nirwana -p TCP -j LOG --log-prefix "NIRWANA: TCP "
#$IPTABLES -A nirwana -p UDP -j LOG --log-prefix "NIRWANA: UDP "
#$IPTABLES -A nirwana -p ICMP -j LOG --log-prefix "NIRWANA: ICMP "
#$IPTABLES -A nirwana -p TCP -j DROP

# Kernelmodule masq und forwarding aktivieren (dyn. IP vom Provider)
$IPTABLES -t nat -A POSTROUTING -o $DEV_EXT -j MASQUERADE
$IPTABLES -I FORWARD -p tcp --tcp-flags SYN,RST SYN -j TCPMSS --clamp-mss-to-pmtu

# Für alle bestehenden ein- und ausgehenden Verbindungen. Dritte Regel
# verhindert alle Verbindungen die Außen kommen
$IPTABLES -A FORWARD -i $DEV_LOC -o $DEV_EXT -m state --state ESTABLISHED,RELATED -j ACCEPT
$IPTABLES -A FORWARD -i $DEV_EXT -o $DEV_LOC -m state --state ESTABLISHED,RELATED -j ACCEPT

# XML RPC
$IPTABLES -t nat -A PREROUTING -i $DEV_EXT -p tcp --dport 3049 -j DNAT --to 192.168.115.34:3048

# Zugriff auf internen WEB-Server
$IPTABLES -t nat -A PREROUTING -i $DEV_EXT -p tcp --dport 80 -j DNAT --to 192.168.115.90:80

$IPTABLES -t nat -A PREROUTING -i $DEV_EXT -p tcp --dport 6000:7000 -j DNAT --to 192.168.115.2
$IPTABLES -t nat -A PREROUTING -i $DEV_EXT -p tcp --dport 8081 -j DNAT --to 192.168.115.90:8080
$IPTABLES -t nat -A PREROUTING -i $DEV_EXT -p tcp --dport 8082 -j DNAT --to 192.168.115.34:5900


# Ping ins Internet erlauben, eingehende werden von der NIRWANA-Rule abgefangen
$IPTABLES -A FORWARD -o $DEV_EXT -p ICMP --icmp-type echo-request -j ACCEPT

# HTTP
$IPTABLES -A FORWARD -o $DEV_EXT -p tcp --sport 1024:65535 --dport http -m state --state NEW -j ACCEPT
#$IPTABLES -A FORWARD -o $DEV_EXT -p tcp --sport 1024:65535 --dport https -m state --state NEW -j ACCEPT

# FTP
#$IPTABLES -A FORWARD -o $DEV_EXT -p tcp --sport 1024:65535 --dport ftp -m state --state NEW -j ACCEPT
#$IPTABLES -A FORWARD -o $DEV_EXT -p tcp --sport 1024:65535 --dport 1024:65535 -m state --state NEW -j ACCEPT

# Alle Pakete, die bis hierher kommen nach nirwana
$IPTABLES -A INPUT -j nirwana
$IPTABLES -A OUTPUT -j nirwana
$IPTABLES -A FORWARD -j nirwana

rc_exit